////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(start, end, step = 1) {
  
    let output = []
    if (start < end && step > 0){
      while (start <= end) {
        output.push(start)
        start += step
      }
    } else if (start > end) {
        while (start >= end) {
          output.push(start);
          start -= step
        }
    }
return output

  
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(array, count = 0) {
  if (array.length === 0) {
    return count
  }
  count += array[0];
  return sum(array.slice(1), count)
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array, output = []) {
  if (array.length === 0) {
    return output
  }
  output.unshift(array[0])
  return reverseArray(array.slice(1), output)
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
  return array.reverse()
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
  let list = null;
  for (let i = array.length - 1; i >= 0; i--){
     list = {value: array[i], rest: list};
  }
  return list
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list) {
  let array = [];
  for (let node = list; node; node = node.rest){
    array.push(node.value);
  }
  return array
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(element, list) {
  return {value: element, rest: list}
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, n) {
 if (!list) {
  return ;
 } else if (n == 0) {
  return list.value;
 } else {
  return nth(list.rest, n - 1)
 }
}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual(a, b) {
  if (typeof a === 'string' && typeof b === 'string'){
    if (a === b) {
      return true
    } else {
      return false
    }
  }
  if (typeof a === 'number' && typeof b === 'number'){
    if (a === b) {
      return true
    } else {
      return false
    }
  }
  if (typeof a === 'boolean' && typeof b === 'boolean'){
    if (a === b) {
      return true
    } else {
      return false
    }
  }
  if (typeof a === 'object' && typeof b === 'object') {
    var objA = Object.keys(a);
    var objB = Object.keys(b);
    if (objA.length === objB.length) {
      if (objA.length === 0 && objB.length === 0) {
        return true
      } if (objA[0] != objB[0]) {
          return false
      }
      var objAA = Object.entries(a);
      var objBB = Object.entries(b);
      if(objAA[0].length === objBB[0].length) {
        if (objAA == objBB) {
          return true
        } else {
          return false
        }
      } else {
        return false
      }
    } else {
      return false
    }
    
  } else {
    return false
  }
}


////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};